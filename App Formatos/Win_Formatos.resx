<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerAnimations.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>